# CASE statement

WHEN condition1 THEN result1
WHEN condition2 THEN result2
ELSE some_other_result
END;

SELECT a,
CASE WHEN a=1 THEN 'one'
     WHEN a=2 THEN 'two'
ELSE 'other'
END
FROM test;

SELECT customer_id,
CASE 
	WHEN (customer_id <= 100) THEN 'Premium'
	WHEN (customer_id BETWEEN 100 and 200) THEN 'Plus'
	ELSE 'Normal'
END
FROM customer;

SELECT customer_id,
CASE 
	WHEN (customer_id <= 100) THEN 'Premium'
	WHEN (customer_id BETWEEN 100 and 200) THEN 'Plus'
	ELSE 'Normal'
END AS customer_class
FROM customer;

SELECT 
CASE rental_rate 
WHEN 0.99 THEN 1
ELSE 0
END
FROM film;

SELECT 
SUM(CASE rental_rate 
WHEN 0.99 THEN 1
ELSE 0
END) AS number_of_bargains
FROM film;

SELECT 
SUM(CASE rental_rate 
WHEN 0.99 THEN 1
ELSE 0
END) AS bargains,
SUM(CASE rental_rate
   WHEN 2.99 THEN 1
   ELSE 0
   END) AS regular
FROM film;

SELECT 
SUM(CASE rental_rate 
WHEN 0.99 THEN 1
ELSE 0
END) AS bargains,
SUM(CASE rental_rate
   WHEN 2.99 THEN 1
   ELSE 0
   END) AS premium
FROM film;

SELECT 
SUM(CASE rating
   WHEN 'R' THEN 1
   ELSE 0
   END) AS r,
   SUM(CASE rating
	  WHEN 'PG' THEN 1
	  ELSE 0
	  END) AS pg,
	  SUM(CASE rating
		 WHEN 'PG-13' THEN 1
		 ELSE 0
		 END) AS pg13
		 FROM film;



# COALESCE
# returns the first argument that is not null

EX) SELECT COALESCE (1,2)  returns 1
SELECT COALESCE(NULL, 2, 3) returns 2

# if this particular value seems to be null, replace with 0
SELECT item, (price-COALESCE(discount,0)) AS final
FROM table

# CAST operator let's you convert from one data type into another

SELECT CAST('5' AS INTEGER)

SELECT('5'::INTEGER)

SELECT CAST(date AS TIMESTAMP)
FROM table

(CORRECT) SELECT CAST('5' AS INTEGER) AS new_int;

(WRONG) SELECT CAST('5' AS INTEGER);

(CORRECT) SELECT '5'::INTEGER;

SELECT CAST(inventory_id AS VARCHAR) FROM rental;

# NULLIF function takes in 2 inputs and returns NULL if both are equal (if not, just returns first argument)
example) NULLIF(10,12) returns 10

# create new table and insert values
INSERT INTO depts(
first_name, 
department 
)
VALUES
('Vinton', 'A'),
('Lauren', 'A'),
('Claire', 'B');

SELECT (
SUM(CASE WHEN department = 'A' THEN 1 ELSE 0 END)/
SUM(CASE WHEN department = 'B' THEN 1 ELSE 0 END)
) AS department_ratio
FROM depts;

DELETE FROM depts
WHERE department = 'B';


# VIEWS

CREATE OR REPLACE VIEW customer_info AS
SELECT first_name, last_name, address, district FROM customer
INNER JOIN address
ON customer.address_id = address.address_id;

ALTER VIEW customer_info RENAME to c_info;

